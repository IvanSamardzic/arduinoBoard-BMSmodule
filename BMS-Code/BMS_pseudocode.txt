define timer{
	clear time on compare match;
	define clock prescaler;
	define counter register;
	enable compare match interrupt;
}

define ADC{
	define voltage reference;
	define byte result arrangement;
	define input channel pin;
	enable ADC;
	set ADC prescaler;
	enable ADC interrupt;
}

define ISR(ADC_vect){
	if skipNextADC_flag is raised:
		skip next ADC;
		clear ADC_flag;
	if last reading is temp reading:
		read volt reading;
		set ADMUX register;
		set ADC_flag;
	else:
		populate ADC value in ADC result buffer array;
		increment ADC result buffer array pointer;
		if ADC result buffer array pointer is 16:
			ADC result buffer array pointer is clear;
			set buffer_ready flag;
		increment last reading;
		if last reading is temp value:
			read temp reading;
			set ADMUX register;
			set ADC_flag;
}

define ISR(TIMER_vect){
	if green_pattern is 0:
		if flash_green_flag is raised:
			ledGreen;
		flash_green flag is cleared;
	else:
		rotate green_pattern;
		if green_pattern LSB is raised:
			ledGreen;
		else:
			ledOff;
	if n_channelMOS is turn on:
		if MOS is turn on shortly before and ADC result buffer array pointer is clear:
			update battery values;
			if we reaches value goal:
				turn off n_channelMOS;
			else:
				try_again;
		if MOS is not turned on shortly before:
			derement the time that is needed to reach value goal;
			turn on n_channelMOS;
			if MOS is turn on shortly before:
				turn off MOS;
				reset ADC result buffer array pointer;
	else:
		turn off MOS;
	if green_pattern LSB is cleared:
		ledOff;
	trigger ADC with set start conversion bit;
}

define ledGreen{
	define led pin as output;
	set pin value at HIGH state;
}

define ledOff{
	define led pin as output;
	set pin value at LOW state;
}